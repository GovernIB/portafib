/*
 * API Interna de PortaFIB que ofereix serveis de firma web.
 * Conjunt de Serveis REST de PortaFIB per atendre peticions de firma a trav√©s de web de PortaFIB
 *
 * The version of the OpenAPI document: 1.0-SNAPSHOT
 * Contact: otae@fundaciobit.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package es.caib.portafib.apiinterna.client.firma.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import es.caib.portafib.apiinterna.client.firma.v1.model.FirmaSimpleDocumentTypeInformation;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GetAvailableTypesOfDocumentsResponse
 */
@JsonPropertyOrder({
  GetAvailableTypesOfDocumentsResponse.JSON_PROPERTY_GET_AVAILABLE_TYPES_OF_DOCUMENTS_RESPONSE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class GetAvailableTypesOfDocumentsResponse {
  public static final String JSON_PROPERTY_GET_AVAILABLE_TYPES_OF_DOCUMENTS_RESPONSE = "getAvailableTypesOfDocumentsResponse";
  @javax.annotation.Nullable
  private List<FirmaSimpleDocumentTypeInformation> getAvailableTypesOfDocumentsResponse = new ArrayList<>();

  public GetAvailableTypesOfDocumentsResponse() {
  }

  public GetAvailableTypesOfDocumentsResponse getAvailableTypesOfDocumentsResponse(@javax.annotation.Nullable List<FirmaSimpleDocumentTypeInformation> getAvailableTypesOfDocumentsResponse) {
    
    this.getAvailableTypesOfDocumentsResponse = getAvailableTypesOfDocumentsResponse;
    return this;
  }

  public GetAvailableTypesOfDocumentsResponse addGetAvailableTypesOfDocumentsResponseItem(FirmaSimpleDocumentTypeInformation getAvailableTypesOfDocumentsResponseItem) {
    if (this.getAvailableTypesOfDocumentsResponse == null) {
      this.getAvailableTypesOfDocumentsResponse = new ArrayList<>();
    }
    this.getAvailableTypesOfDocumentsResponse.add(getAvailableTypesOfDocumentsResponseItem);
    return this;
  }

  /**
   * Get getAvailableTypesOfDocumentsResponse
   * @return getAvailableTypesOfDocumentsResponse
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GET_AVAILABLE_TYPES_OF_DOCUMENTS_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<FirmaSimpleDocumentTypeInformation> getGetAvailableTypesOfDocumentsResponse() {
    return getAvailableTypesOfDocumentsResponse;
  }


  @JsonProperty(JSON_PROPERTY_GET_AVAILABLE_TYPES_OF_DOCUMENTS_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGetAvailableTypesOfDocumentsResponse(@javax.annotation.Nullable List<FirmaSimpleDocumentTypeInformation> getAvailableTypesOfDocumentsResponse) {
    this.getAvailableTypesOfDocumentsResponse = getAvailableTypesOfDocumentsResponse;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAvailableTypesOfDocumentsResponse getAvailableTypesOfDocumentsResponse = (GetAvailableTypesOfDocumentsResponse) o;
    return Objects.equals(this.getAvailableTypesOfDocumentsResponse, getAvailableTypesOfDocumentsResponse.getAvailableTypesOfDocumentsResponse);
  }

  @Override
  public int hashCode() {
    return Objects.hash(getAvailableTypesOfDocumentsResponse);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAvailableTypesOfDocumentsResponse {\n");
    sb.append("    getAvailableTypesOfDocumentsResponse: ").append(toIndentedString(getAvailableTypesOfDocumentsResponse)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

