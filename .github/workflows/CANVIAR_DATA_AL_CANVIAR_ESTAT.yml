name: Update Dates on Status Change

on:
  issues:
    types:
      - reopened
      - edited
      - closed
      - labeled
      - unlabeled
      - assigned
      - unassigned
      - milestoned
      - demilestoned

jobs:
  update-dates:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get issue data
        id: get-issue
        uses: actions/github-script@v6
        with:
          script: |
            const issue = context.payload.issue;
            const changes = context.payload.changes;
            const status = issue.state;

            // Obtener el estado anterior si est√° disponible
            const previousStatus = changes?.state?.from;

            console.log(`Estado actual (status): ${status}`);
            console.log(`Estado anterior (previousStatus): ${previousStatus || "No disponible"}`);
            

            // Si el estado cambia de "Todo" a "In Progress"
            // previousStatus === "Todo" &&
            if ( status === "In Progress") {
              const startDate = new Date().toISOString().split('T')[0];
              return { startDate };
            }

            // Si el estado cambia de "In Progress" a "Done"
            // previousStatus === "In Progress" && 
            if (status === "Done") {
              const endDate = new Date().toISOString().split('T')[0];
              return { endDate };
            }

            return {};

      - name: Update StartDate
        if: steps.get-issue.outputs.startDate
        uses: actions/github-script@v6
        with:
          script: |
            const issue = context.payload.issue;
            const startDate = "${{ steps.get-issue.outputs.startDate }}";
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              custom_fields: {
                StartDate: startDate
              }
            });

      - name: Update EndDate
        if: steps.get-issue.outputs.endDate
        uses: actions/github-script@v6
        with:
          script: |
            const issue = context.payload.issue;
            const endDate = "${{ steps.get-issue.outputs.endDate }}";
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              custom_fields: {
                EndDate: endDate
              }
            });
