/*
 * API Interna de PortaFIB de consulta de tipus documentals de PortaFIB
 * Conjunt de Serveis REST de PortaFIB per atendre consultes de tipus documentals.
 *
 * The version of the OpenAPI document: 1.0-SNAPSHOT
 * Contact: otae@fundaciobit.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package es.caib.portafib.apiinterna.client.tipusdocumentals.v1.api;

import es.caib.portafib.apiinterna.client.tipusdocumentals.v1.services.ApiClient;
import es.caib.portafib.apiinterna.client.tipusdocumentals.v1.services.ApiException;


import java.io.File;
import java.io.FileInputStream;
import java.util.Properties;

import org.jboss.logging.Logger;
import org.junit.Assert;
import org.junit.Assume;
import org.junit.Before;
import org.junit.Test;

import es.caib.portafib.apiinterna.client.tipusdocumentals.v1.model.LlistaTipusDocumentalRest;

/**
 * API tests for TipusDocumentalV1Api
 */
public class TipusDocumentalV1ApiTest {
	
	protected Logger log = Logger.getLogger(getClass());

	//private final TipusDocumentalV1Api api = new TipusDocumentalV1Api();

	/**
	 * Retorna la versiÃ³ de PortaFIB REST
	 *
	 * @throws ApiException if the Api call fails
	 */
	public static void main(String[] args) {

		TipusDocumentalV1ApiTest tipusDocumentalV1ApiTest = new TipusDocumentalV1ApiTest();
		try {
			tipusDocumentalV1ApiTest.callListTest();
		} catch (Exception e) {
			e.printStackTrace();
		}

	}
	
	@Before
	 public void beforeMethod() {
	     try {
			org.junit.Assume.assumeTrue(getApi()!= null);
		} catch (Exception e) {
			Assume.assumeFalse("Error instanciant API: "+e.getMessage(), true);
		}
	 }
	
	@Test
	public void callListTest() {
		
        String language = "ca";
		String appuser = null;
		String expectedError = null;
		//Comu
		
        internalTestTipusDocumentalList(language, appuser, expectedError);
	}
	
	@Test
	public void callListErrorUserTest() {
		
        String language = "ca";
		String appuser = "pepito";
		String expectedError = "{\"code\":400,\"errorMessage\":\"No existeix l'usuari aplicacio introduit\"}";
		//Comu
		
        internalTestTipusDocumentalList(language, appuser, expectedError);
	}

	private LlistaTipusDocumentalRest internalTestTipusDocumentalList(String language, String appuser, String expectedError) {
		TipusDocumentalV1Api api;
        try {
			api = getApi();
		} catch (Exception e) {
			
			Assert.fail("Error instanciant API => " + e.getMessage());
			return null;
		}
        
	    try {
			LlistaTipusDocumentalRest response = api.callList(language, appuser);
			if(expectedError != null) {
				Assert.fail("S'espera un error i la cridada ha funcionat.");
			}
			System.out.println(response.toString());
			return response;
		} catch (ApiException e) {
			
			if(expectedError == null) {
				Assert.fail("Error a la cridada de  TEST => " + e.getMessage());
			}
			
			Assert.assertEquals(e.getMessage(), expectedError);
			return null;
		}
	}
	
	
	protected TipusDocumentalV1Api getApi() throws Exception {
		Properties prop = new Properties();
		File f = new File("test.properties");
		if (!f.exists()) {
			return null;
		}
        prop.load(new FileInputStream(f));

        String basePath = prop.getProperty("basePath");


        ApiClient client = new ApiClient();
        client.setBasePath(basePath);


        TipusDocumentalV1Api api = new TipusDocumentalV1Api(client);
        return api;
    }
}
