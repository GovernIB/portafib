/*
 * API Interna de PortaFIB de consulta de serveis d'utilitat
 * Conjunt de Serveis REST de PortaFIB per atendre consultes generiques de Portafib
 *
 * The version of the OpenAPI document: 1.0-SNAPSHOT
 * Contact: otae@fundaciobit.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package es.caib.portafib.apiinterna.client.firma.v1.example.api;

import es.caib.portafib.apiinterna.client.firma.v1.api.UtilsV1Api;
import es.caib.portafib.apiinterna.client.firma.v1.model.AvailableLanguagesRest;
import es.caib.portafib.apiinterna.client.firma.v1.model.AvailableProfilesRest;
import es.caib.portafib.apiinterna.client.firma.v1.model.LlistaTipusDocumentalRest;
import es.caib.portafib.apiinterna.client.firma.v1.services.ApiClient;
import es.caib.portafib.apiinterna.client.firma.v1.services.ApiException;

/**
 * API tests for UtilsV1Api
 * 
 */
public class FirmaUtilsV1ApiTest extends AbstractV1ApiTest<UtilsV1Api> {

    public static void main(String[] args) {

        FirmaUtilsV1ApiTest utilsV1ApiTest = new FirmaUtilsV1ApiTest();
        try {

            utilsV1ApiTest.callTipusDocumentalListTest();

            utilsV1ApiTest.callTipusDocumentalListWithNotValidAppUserTest();

            utilsV1ApiTest.callPerfilsDeFirmaListTest();

            utilsV1ApiTest.callAvailableLanguagesTest();

        } catch (ApiException e) {
            String testName = "FirmaUtilsV1Api Tests";
            utilsV1ApiTest.processApiException(e, testName);
        } catch (Exception e) {
            e.printStackTrace(System.err);
        }

    }

    public void callTipusDocumentalListWithNotValidAppUserTest() throws ApiException, Exception {

        String appuser = "aaaaaa";
        Integer expectedError = 400;
        internalTestTipusDocumentalList(appuser, expectedError, "callTipusDocumentalListWithNotValidAppUserTest");
        System.out.println("Test OK");
    }

    public void callTipusDocumentalListTest() throws ApiException, Exception {

        String appuser = null;
        Integer expectedError = null;

        internalTestTipusDocumentalList(appuser, expectedError, "callTipusDocumentalListTest");
    }

    public void callPerfilsDeFirmaListTest() throws ApiException, Exception {

        Integer expectedError = null;

        internalTestPerfilsDeFirmaList(expectedError, "callPerfilsDeFirmaListTest");
    }

    public void callAvailableLanguagesTest() throws ApiException, Exception {

        Integer expectedError = null;

        internalTestAvailableLanguages(expectedError, "callAvailable");
    }

    protected AvailableLanguagesRest internalTestAvailableLanguages(Integer expectedError, String testName)
            throws ApiException, Exception {
        System.out.println("============================ " + testName + " ============================");
        try {
            UtilsV1Api api = getApi();

            String languageUI = getLanguageUI(getConfigProperties());

            AvailableLanguagesRest response = api.getAvailableLanguages(languageUI);
            if (expectedError != null) {
                log.error(testName + ": S'espera un error " + expectedError + " i la cridada ha funcionat.");
            }
            System.out.println(response.toString());
            return response;
        } catch (ApiException e) {
            checkExpectedError(expectedError, e);
            return null;
        }

    }

    protected AvailableProfilesRest internalTestPerfilsDeFirmaList(Integer expectedError, String testName)
            throws ApiException, Exception {
        System.out.println("============================ " + testName + " ============================");
        try {
            UtilsV1Api api = getApi();
            String languageUI = getLanguageUI(getConfigProperties());

            AvailableProfilesRest response = api.getAvailableProfiles1(languageUI);
            if (expectedError != null) {
                log.error(testName + ": S'espera un error " + expectedError + " i la cridada ha funcionat.");
            }
            System.out.println(response.toString());
            return response;
        } catch (ApiException e) {
            checkExpectedError(expectedError, e);
            return null;
        }

    }

    protected LlistaTipusDocumentalRest internalTestTipusDocumentalList(String appuser, Integer expectedError,
            String testName) throws ApiException, Exception {
        System.out.println("============================ " + testName + " ============================");

        try {
            UtilsV1Api api = getApi();

            String languageUI = getLanguageUI(getConfigProperties());

            LlistaTipusDocumentalRest response = api.tipusdocumentalslist(languageUI, appuser);
            if (expectedError != null) {
                throw new Exception(
                        testName + ": S'espera un error " + expectedError + " per√≤ la cridada ha funcionat.");
            }

            System.out.println(response.toString());
            return response;
        } catch (ApiException e) {
            checkExpectedError(expectedError, e);
            return null;
        }

    }

    @Override
    protected UtilsV1Api getApi() throws Exception {
        ApiClient client = getApiClient();
        UtilsV1Api api = new UtilsV1Api(client);
        return api;
    }

    @Override
    protected String getConfigPropertiesName() {
        return "apifirmautils";
    }

}
